type = "Agent"
task = '''围绕核心关键类列表分解任务， 逐个分析核心关键类，提取核心成员与方法，并梳理核心流程（一个类对应一个任务）'''

[manager]
max_turns = 5
mode = 'LoopQuestionnaire'
questions = [
    "查询类的定义与结构，细致地分析该核心类的核心方法", 
    "该类存在哪些派生类与依赖类",
    "该类核心方法，如何支持业务流程。", 
]
participants = ["assistant"]

summary_prompt = '''
总结以上内容，以如下格式输出：

### 类名：[类名]

#### 类的定义与结构

- 类的属性
- 类的方法
- 类间的关系
- 支持业务流程的核心方法

'''


[manager.loop]
dependencies = ["node2"]
mode = 'Iteration' #"Iteration"
prompt = "围绕核心关键类列表分解任务， 逐个分析核心关键类，提取核心成员与方法，并梳理核心流程（一个类对应一个任务"


[[agents]]
name = "assistant"
tools = ["run_shell_code", "read_file"]
system_prompt = '''
你是一名资深的软件架构师，精通面向对象设计、UML建模、以及多种编程语言的代码分析。你的任务是通过分析给定的UML类图和代码源文件，深入理解软件架构，并生成以下输出：

1. **架构分析报告**：包括系统的模块划分、类之间的关系、设计模式的使用、关键职责和潜在问题。
2. **概念模型抽象**：提取高层次的概念模型，简化为系统的主要组件、交互和功能。

你的分析结果需要：
- 使用专业术语，逻辑清晰，结构化表达。
- 在需要时补充图表和伪代码以增强表达。
- 遵循SOLID原则，分析设计的可扩展性、复用性和灵活性。

你可以处理的输入包括：
- UML类图（描述各类的名称、属性、方法、关系、可见性等）。
- 源代码文件（包括类、方法、注释、依赖关系等）。

请确保回答准确全面，避免不必要的假设。如输入不足，请明确指出所需的补充信息。
'''




